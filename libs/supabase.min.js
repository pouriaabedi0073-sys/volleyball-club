// Local placeholder for supabase-js. Replace with the official minified SDK to enable full functionality.
// A small shim that exposes a createClient function which throws a clear error when used.
window.supabaseJs = {
  createClient: function(url, anon){
    console.warn('Local supabase shim in use. This is not the real SDK. To enable Supabase features, download the official supabase-js and place it at libs/supabase.min.js');
    return {
      auth: {
        async signUp(){ throw new Error('Supabase SDK not installed locally.'); },
        async signInWithPassword(){ throw new Error('Supabase SDK not installed locally.'); },
        async signInWithOtp(){ throw new Error('Supabase SDK not installed locally.'); },
        async signOut(){ throw new Error('Supabase SDK not installed locally.'); },
        async resetPasswordForEmail(){ throw new Error('Supabase SDK not installed locally.'); },
        async getUser(){ return { data: { user: null } }; }
      },
      from: function(){ return { insert: async ()=>({ error: new Error('Supabase SDK not installed locally.') }) , select: async ()=>({ error: new Error('Supabase SDK not installed locally.') }) , upsert: async ()=>({ error: new Error('Supabase SDK not installed locally.') }) }; },
      storage: {
        from: function(){ return { upload: async ()=>({ error: new Error('Supabase SDK not installed locally.') }), getPublicUrl: function(){ return { data: { publicUrl: '' } }; } }; }
      }
    };
  }
};

console.info('Supabase local shim loaded. To enable real functionality, run the PowerShell command described in the README to download the official supabase.min.js into libs/.');
